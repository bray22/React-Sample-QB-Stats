{"ast":null,"code":"var _jsxFileName = \"/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js\";\n//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Line from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillUpdate = () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      myChart.data.labels = [12, 19, 3, 5, 2, 3];\n    };\n\n    this.componentDidMount = () => {\n      console.log(this.props.qbStats);\n      this.setState({\n        qbStats: this.props.qbStats\n      });\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const myChart = new Line(ctx, {\n        type: 'line',\n        data: {\n          labels: this.state.labels,\n          datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n\n    this.render = () => {\n      const {\n        qbStats\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), qbStats && qbStats.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"dddd\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 43\n        }, this)), \"eee\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\",\n            width: \"100\",\n            height: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      qbStats: [],\n      labels: ['Green', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange']\n    };\n    this.ctx = /*#__PURE__*/React.createRef();\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  qbStats: state.qbStats\n});\n\nexport default connect(mapStateToProps)(LineGraph);","map":{"version":3,"sources":["/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js"],"names":["React","Component","createRef","connect","Line","LineGraph","constructor","props","componentWillUpdate","ctx","document","getElementById","getContext","myChart","data","labels","componentDidMount","console","log","qbStats","setState","type","state","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","render","map","x","i","mapStateToProps"],"mappings":"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","sourcesContent":["//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Line from 'chart.js/auto';\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qbStats: [],\n      labels: ['Green', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange']\n    };\n\n    this.ctx = React.createRef();\n  }\n\n  componentWillUpdate = () => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    myChart.data.labels = [12, 19, 3, 5, 2, 3];\n  }\n\n\n  componentDidMount = () => {\n console.log(this.props.qbStats);\n    this.setState({\n      qbStats: this.props.qbStats\n    })\n\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const myChart = new Line(ctx, {\n      type: 'line',\n      data: {\n          labels: this.state.labels,\n          datasets: [{\n              label: '# of Votes',\n              data: [12, 19, 3, 5, 2, 3],\n              backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)'\n              ],\n              borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)'\n              ],\n              borderWidth: 1\n          }]\n      },\n      options: {\n          scales: {\n              y: {\n                  beginAtZero: true\n              }\n          }\n      }\n  });\n  };\n\n  \n\n  render = () => {\n    const { qbStats } = this.props;\n    return (\n      <>\n        <h1>Chart</h1>\n        {qbStats && qbStats.map((x, i) => <div key={i}>dddd</div>) }eee\n        <div>\n        <canvas id=\"myChart\" width=\"100\" height=\"100\"></canvas>\n            </div>\n      </>\n    );\n  };\n  \n}\n\nconst mapStateToProps = state => ({\n  qbStats: state.qbStats,\n});\n\nexport default connect(mapStateToProps)(LineGraph)\n\n"]},"metadata":{},"sourceType":"module"}