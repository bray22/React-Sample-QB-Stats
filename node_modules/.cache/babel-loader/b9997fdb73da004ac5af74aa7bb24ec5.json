{"ast":null,"code":"var _jsxFileName = \"/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js\";\n//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LineChart;\n\nconst LineGraph = _ref => {\n  let {\n    quarterback,\n    qbStats,\n    metric\n  } = _ref;\n  const graphLabels = [];\n  const compPercentage = [];\n  const yardsPerAttenmpt = [];\n  const labels = qbStats.forEach(gameWeek => {\n    graphLabels.push(`week ${gameWeek.week}`);\n    compPercentage.push(`${Math.round(gameWeek.CmpPcnt)}`);\n    yardsPerAttenmpt.push(`${Math.round(gameWeek.YdsPrAtt)}`);\n  });\n  const yardsPerAttenmptData = {\n    label: \"Yards Per Attenpt\",\n    data: yardsPerAttenmpt,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  };\n  const completionPercentageData = {\n    label: \"Complettion Percentage\",\n    data: compPercentage,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  };\n  const data = {\n    labels: graphLabels\n  };\n  data.datasets = metric === \"YdsPrAtt\" ? [yardsPerAttenmptData] : [compPercentage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js"],"names":["React","Component","createRef","useState","useEffect","connect","Chart","Line","LineChart","LineGraph","quarterback","qbStats","metric","graphLabels","compPercentage","yardsPerAttenmpt","labels","forEach","gameWeek","push","week","Math","round","CmpPcnt","YdsPrAtt","yardsPerAttenmptData","label","data","fill","backgroundColor","borderColor","completionPercentageData","datasets"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,IAAIC,SAAJ;;AAEA,MAAMC,SAAS,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAAqC;AACtD,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,MAAM,GAAGL,OAAO,CAACM,OAAR,CAAkBC,QAAD,IAAc;AAC5CL,IAAAA,WAAW,CAACM,IAAZ,CAAkB,QAAOD,QAAQ,CAACE,IAAK,EAAvC;AACAN,IAAAA,cAAc,CAACK,IAAf,CAAqB,GAAEE,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACK,OAApB,CAA6B,EAApD;AACAR,IAAAA,gBAAgB,CAACI,IAAjB,CAAuB,GAAEE,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACM,QAApB,CAA8B,EAAvD;AACD,GAJc,CAAf;AAMA,QAAMC,oBAAoB,GAAG;AAC3BC,IAAAA,KAAK,EAAE,mBADoB;AAE3BC,IAAAA,IAAI,EAAEZ,gBAFqB;AAG3Ba,IAAAA,IAAI,EAAE,IAHqB;AAI3BC,IAAAA,eAAe,EAAE,sBAJU;AAK3BC,IAAAA,WAAW,EAAE;AALc,GAA7B;AAQA,QAAMC,wBAAwB,GAAG;AAC/BL,IAAAA,KAAK,EAAE,wBADwB;AAE/BC,IAAAA,IAAI,EAAEb,cAFyB;AAG/Bc,IAAAA,IAAI,EAAE,IAHyB;AAI/BC,IAAAA,eAAe,EAAE,sBAJc;AAK/BC,IAAAA,WAAW,EAAE;AALkB,GAAjC;AAQF,QAAMH,IAAI,GAAG;AACXX,IAAAA,MAAM,EAAEH;AADG,GAAb;AAIAc,EAAAA,IAAI,CAACK,QAAL,GAAgBpB,MAAM,KAAK,UAAX,GAAwB,CAACa,oBAAD,CAAxB,GAAiD,CAACX,cAAD,CAAjE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEa;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMC,CAtCD;;KAAMlB,S;AAkDN,eAAeA,SAAf","sourcesContent":["//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\nimport {Line} from 'react-chartjs-2';\n\nlet LineChart;\n\nconst LineGraph = ({ quarterback, qbStats, metric }) => {\n  const graphLabels = [];\n  const compPercentage = [];\n  const yardsPerAttenmpt = [];\n  const labels = qbStats.forEach( (gameWeek) => {\n    graphLabels.push(`week ${gameWeek.week}`);\n    compPercentage.push(`${Math.round(gameWeek.CmpPcnt)}`);\n    yardsPerAttenmpt.push(`${Math.round(gameWeek.YdsPrAtt)}` )\n  });\n\n  const yardsPerAttenmptData = {\n    label: \"Yards Per Attenpt\",\n    data: yardsPerAttenmpt,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  }\n\n  const completionPercentageData = {\n    label: \"Complettion Percentage\",\n    data: compPercentage,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  }\n\nconst data = {\n  labels: graphLabels,\n};\n\ndata.datasets = metric === \"YdsPrAtt\" ? [yardsPerAttenmptData] : [compPercentage]\n\nreturn (\n  <div className=\"line-chart\">\n    <Line data={data} />\n  </div>\n);\n  \n};\n\n  \n\n  \n   \n \n  \n  \n\n\n\nexport default LineGraph;\n\n"]},"metadata":{},"sourceType":"module"}