{"ast":null,"code":"//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nvar LineChart;\n\nvar LineGraph = function LineGraph(_ref) {\n  var quarterback = _ref.quarterback,\n      qbStats = _ref.qbStats,\n      metric = _ref.metric;\n  var graphLabels = [];\n  var compPercentage = [];\n  var yardsPerAttenmpt = [];\n  var labels = qbStats.forEach(function (gameWeek) {\n    graphLabels.push(\"week \".concat(gameWeek.week));\n    compPercentage.push(\"\".concat(Math.round(gameWeek.CmpPcnt)));\n    yardsPerAttenmpt.push(\"\".concat(Math.round(gameWeek.YdsPrAtt)));\n  });\n  var yardsPerAttenmptData = {\n    label: \"Yards Per Attenpt\",\n    data: yardsPerAttenmpt,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  };\n  var compPercentageData = {\n    label: \"Completion Percentage\",\n    data: compPercentage,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  };\n  var data = {\n    labels: graphLabels\n  };\n  data.datasets = metric === \"YdsPrAtt\" ? [yardsPerAttenmptData] : [compPercentageData];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-chart\"\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data\n  }));\n};\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js"],"names":["React","Component","createRef","useState","useEffect","connect","Chart","Line","LineChart","LineGraph","quarterback","qbStats","metric","graphLabels","compPercentage","yardsPerAttenmpt","labels","forEach","gameWeek","push","week","Math","round","CmpPcnt","YdsPrAtt","yardsPerAttenmptData","label","data","fill","backgroundColor","borderColor","compPercentageData","datasets"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,IAAIC,SAAJ;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsC;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACtD,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,MAAM,GAAGL,OAAO,CAACM,OAAR,CAAiB,UAACC,QAAD,EAAc;AAC5CL,IAAAA,WAAW,CAACM,IAAZ,gBAAyBD,QAAQ,CAACE,IAAlC;AACAN,IAAAA,cAAc,CAACK,IAAf,WAAuBE,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACK,OAApB,CAAvB;AACAR,IAAAA,gBAAgB,CAACI,IAAjB,WAAyBE,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACM,QAApB,CAAzB;AACD,GAJc,CAAf;AAMA,MAAMC,oBAAoB,GAAG;AAC3BC,IAAAA,KAAK,EAAE,mBADoB;AAE3BC,IAAAA,IAAI,EAAEZ,gBAFqB;AAG3Ba,IAAAA,IAAI,EAAE,IAHqB;AAI3BC,IAAAA,eAAe,EAAE,sBAJU;AAK3BC,IAAAA,WAAW,EAAE;AALc,GAA7B;AAQA,MAAMC,kBAAkB,GAAG;AACzBL,IAAAA,KAAK,EAAE,uBADkB;AAEzBC,IAAAA,IAAI,EAAEb,cAFmB;AAGzBc,IAAAA,IAAI,EAAE,IAHmB;AAIzBC,IAAAA,eAAe,EAAE,sBAJQ;AAKzBC,IAAAA,WAAW,EAAE;AALY,GAA3B;AAQF,MAAMH,IAAI,GAAG;AACXX,IAAAA,MAAM,EAAEH;AADG,GAAb;AAIAc,EAAAA,IAAI,CAACK,QAAL,GAAgBpB,MAAM,KAAK,UAAX,GAAwB,CAACa,oBAAD,CAAxB,GAAiD,CAACM,kBAAD,CAAjE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ;AAAZ,IADF,CADF;AAMC,CAtCD;;AAkDA,eAAelB,SAAf","sourcesContent":["//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\nimport {Line} from 'react-chartjs-2';\n\nlet LineChart;\n\nconst LineGraph = ({ quarterback, qbStats, metric }) => {\n  const graphLabels = [];\n  const compPercentage = [];\n  const yardsPerAttenmpt = [];\n  const labels = qbStats.forEach( (gameWeek) => {\n    graphLabels.push(`week ${gameWeek.week}`);\n    compPercentage.push(`${Math.round(gameWeek.CmpPcnt)}`);\n    yardsPerAttenmpt.push(`${Math.round(gameWeek.YdsPrAtt)}` )\n  });\n\n  const yardsPerAttenmptData = {\n    label: \"Yards Per Attenpt\",\n    data: yardsPerAttenmpt,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  }\n\n  const compPercentageData = {\n    label: \"Completion Percentage\",\n    data: compPercentage,\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  }\n\nconst data = {\n  labels: graphLabels,\n};\n\ndata.datasets = metric === \"YdsPrAtt\" ? [yardsPerAttenmptData] : [compPercentageData]\n\nreturn (\n  <div className=\"line-chart\">\n    <Line data={data} />\n  </div>\n);\n  \n};\n\n  \n\n  \n   \n \n  \n  \n\n\n\nexport default LineGraph;\n\n"]},"metadata":{},"sourceType":"module"}