{"ast":null,"code":"var _jsxFileName = \"/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js\";\n//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef } from \"react\";\nimport Line from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const myChart = new Line(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\",\n            width: \"100\",\n            height: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {};\n    this.ctx = /*#__PURE__*/React.createRef();\n  }\n\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js"],"names":["React","Component","createRef","Line","LineGraph","constructor","props","componentDidMount","console","log","ctx","document","getElementById","getContext","myChart","type","data","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","render","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,iBATmB,GASC,MAAM;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACG,YAAMI,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,UAAnC,CAA8C,IAA9C,CAAZ;AACA,YAAMC,OAAO,GAAG,IAAIX,IAAJ,CAASO,GAAT,EAAc;AAC5BK,QAAAA,IAAI,EAAE,MADsB;AAE5BC,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;AAEFC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,YADA;AAEPH,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAIPI,YAAAA,WAAW,EAAE;AAJN,WAAD;AAFR,SAFsB;AAW5BC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,CAAC,EAAE;AACCC,cAAAA,WAAW,EAAE;AADd;AADC;AADH;AAXmB,OAAd,CAAhB;AAmBD,KA/BkB;;AAAA,SAmCnBC,MAnCmB,GAmCV,MAAM;AAEb,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACA;AAAQ,YAAA,EAAE,EAAC,SAAX;AAAqB,YAAA,KAAK,EAAC,KAA3B;AAAiC,YAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAQD,KA7CkB;;AAEjB,SAAKC,KAAL,GAAa,EAAb;AAIA,SAAKhB,GAAL,gBAAWV,KAAK,CAACE,SAAN,EAAX;AACD;;AAR+B;;AAiDlC,eAAeE,SAAf","sourcesContent":["//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef } from \"react\";\nimport Line from 'chart.js/auto';\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n\n    this.ctx = React.createRef();\n  }\n\n  componentDidMount = () => {\n console.log(this.props);\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const myChart = new Line(ctx, {\n      type: 'line',\n      data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n              label: '# of Votes',\n              data: [12, 19, 3, 5, 2, 3],\n             \n              borderWidth: 1\n          }]\n      },\n      options: {\n          scales: {\n              y: {\n                  beginAtZero: true\n              }\n          }\n      }\n  });\n  };\n\n  \n\n  render = () => {\n    \n    return (\n      <>\n        <h1>Line</h1>\n        <div>\n        <canvas id=\"myChart\" width=\"100\" height=\"100\"></canvas>\n            </div>\n      </>\n    );\n  };\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}