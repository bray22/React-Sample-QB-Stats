{"ast":null,"code":"var _jsxFileName = \"/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js\",\n    _s = $RefreshSig$();\n\n//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet LineChart;\n\nconst LineGraph = _ref => {\n  _s();\n\n  let {\n    quarterback,\n    qbStats\n  } = _ref;\n  const graphLabels = [];\n  const compPercentage = [];\n  const labels = qbStats.forEach(x => {\n    graphLabels.push(`week ${x.week}`);\n    compPercentage.push(`${Math.round(x.CmpPcnt)}`);\n  });\n  console.log(graphLabels);\n  console.log(compPercentage);\n  useEffect(() => {\n    buildChart(graphLabels, compPercentage);\n  }, []);\n\n  const buildChart = () => {\n    var ctx = document.getElementById(\"LineChart\").getContext(\"2d\");\n    if (typeof LineChart !== \"undefined\") LineChart.destroy();\n    LineChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: graphLabels,\n        datasets: [{\n          label: 'dataset',\n          data: compPercentage,\n          fill: false,\n          borderColor: 'rgb(100,100,100)',\n          tension: 0.1\n        }]\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"React Line Chart Example - CodeCheef \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"LineChart\",\n        width: \"200\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(LineGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/benray/sandbox/TruMedia/TruMedia_Networks_Project_BenRay/src/components/LineGraph.js"],"names":["React","Component","createRef","useState","useEffect","connect","Chart","LineChart","LineGraph","quarterback","qbStats","graphLabels","compPercentage","labels","forEach","x","push","week","Math","round","CmpPcnt","console","log","buildChart","ctx","document","getElementById","getContext","destroy","type","data","datasets","label","fill","borderColor","tension"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;AAEA,IAAIC,SAAJ;;AAEA,MAAMC,SAAS,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA6B;AAC9C,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACI,OAAR,CAAkBC,CAAD,IAAO;AACrCJ,IAAAA,WAAW,CAACK,IAAZ,CAAkB,QAAOD,CAAC,CAACE,IAAK,EAAhC;AACAL,IAAAA,cAAc,CAACI,IAAf,CAAqB,GAAEE,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACK,OAAb,CAAsB,EAA7C;AACD,GAHc,CAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAACZ,WAAD,EAAcC,cAAd,CAAV;AACD,GAFQ,EAEP,EAFO,CAAT;;AAMA,QAAMW,UAAU,GAAG,MAAM;AACvB,QAAIC,GAAG,GAACC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,UAArC,CAAgD,IAAhD,CAAR;AAEA,QAAI,OAAOpB,SAAP,KAAqB,WAAzB,EAAsCA,SAAS,CAACqB,OAAV;AAEtCrB,IAAAA,SAAS,GAAG,IAAID,KAAJ,CAAUkB,GAAV,EAAe;AACzBK,MAAAA,IAAI,EAAE,MADmB;AAEzBC,MAAAA,IAAI,EAAE;AACJjB,QAAAA,MAAM,EAAEF,WADJ;AAEJoB,QAAAA,QAAQ,EAAE,CAAC;AACTC,UAAAA,KAAK,EAAE,SADE;AAETF,UAAAA,IAAI,EAAElB,cAFG;AAGTqB,UAAAA,IAAI,EAAE,KAHG;AAITC,UAAAA,WAAW,EAAE,kBAJJ;AAKTC,UAAAA,OAAO,EAAE;AALA,SAAD;AAFN;AAFmB,KAAf,CAAZ;AAaD,GAlBD;;AAoBA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAC,KAA7B;AAAmC,QAAA,MAAM,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AASD,CA/CD;;GAAM3B,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["//Last Updated: Ben Ray 1/18/22\nimport React, { Component, createRef, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from 'chart.js/auto';\n\nlet LineChart;\n\nconst LineGraph = ({ quarterback, qbStats }) => {\n  const graphLabels = [];\n  const compPercentage = [];\n  const labels = qbStats.forEach( (x) => {\n    graphLabels.push(`week ${x.week}`);\n    compPercentage.push(`${Math.round(x.CmpPcnt)}`);\n  });\n\n  console.log(graphLabels);\n  console.log(compPercentage);\n\n \n  useEffect(() => {\n    buildChart(graphLabels, compPercentage); \n  },[]);\n\n\n\n  const buildChart = () => {\n    var ctx=document.getElementById(\"LineChart\").getContext(\"2d\");\n\n    if (typeof LineChart !== \"undefined\") LineChart.destroy();\n\n    LineChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: graphLabels,\n        datasets: [{\n          label: 'dataset',\n          data: compPercentage,\n          fill: false,\n          borderColor: 'rgb(100,100,100)',\n          tension: 0.1\n        }],\n      },\n    });\n  }\n\n  return (\n    <>\n    <div className=\"App\">\n    <h3>React Line Chart Example - CodeCheef </h3>\n      <canvas id=\"LineChart\" width=\"200\" height=\"100\"></canvas>\n    </div>\n    </>\n  );\n  \n};\n\n  \n\n  \n   \n \n  \n  \n\n\n\nexport default LineGraph;\n\n"]},"metadata":{},"sourceType":"module"}